@using DoAn_Frontend.Models
@model List<Product>
@{
    ViewData["Title"] = "Quản lý sản phẩm";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="fw-bold"><i class="bi bi-box-seam"></i> Quản lý sản phẩm</h2>
    <button class="btn btn-primary" onclick="openCreateModal()">
        <i class="bi bi-plus-circle"></i> Thêm sản phẩm
    </button>
</div>

<div class="card">
    <div class="table-responsive">
        <table class="table table-hover mb-0">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>Ảnh</th>
                    <th>Tên sản phẩm</th>
                    <th>Giá</th>
                    <th>Danh mục</th>
                    <th>Tồn kho</th>
                    <th>Trạng thái</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.ProductID</td>
                        <td>
                            <img src="@product.ImageURL" style="width: 50px; height: 50px; object-fit: cover; border-radius: 4px;" 
                                 onerror="this.src='https://via.placeholder.com/50x50'">
                        </td>
                        <td><strong>@product.ProductName</strong></td>
                        <td>@product.Price.ToString("N0") ₫</td>
                        <td>@product.Category?.CategoryName</td>
                        <td><span class="badge bg-success">@product.Stock</span></td>
                        <td>
                            @if (product.IsActive)
                            {
                                <span class="badge bg-success">Hoạt động</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Ngừng bán</span>
                            }
                        </td>
                        <td>
                            <button class="btn btn-sm btn-primary" onclick="openEditModal(@product.ProductID)">
                                <i class="bi bi-pencil"></i> Sửa
                            </button>
                            <button class="btn btn-sm btn-danger" onclick="deleteProduct(@product.ProductID, '@product.ProductName')">
                                <i class="bi bi-trash"></i> Xóa
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Product Modal -->
<div class="modal fade" id="productModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Thêm sản phẩm mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="productForm" onsubmit="saveProduct(event)">
                <div class="modal-body">
                    <input type="hidden" id="ProductID" name="ProductID" />
                    
                    <div class="mb-3">
                        <label class="form-label">Tên sản phẩm <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="ProductName" name="ProductName" required>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Giá <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="Price" name="Price" min="0" step="1000" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Số lượng tồn kho <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="Stock" name="Stock" min="0" required>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Danh mục <span class="text-danger">*</span></label>
                        <select class="form-select" id="CategoryID" name="CategoryID" required>
                            <option value="">Chọn danh mục</option>
                            @if (ViewBag.Categories != null)
                            {
                                @foreach (var category in ViewBag.Categories as List<Category>)
                                {
                                    <option value="@category.CategoryID">@category.CategoryName</option>
                                }
                            }
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Đường dẫn ảnh</label>
                        <input type="url" class="form-control" id="ImageURL" name="ImageURL" placeholder="https://example.com/image.jpg">
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Mô tả</label>
                        <textarea class="form-control" id="Description" name="Description" rows="3"></textarea>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="IsActive" name="IsActive" checked>
                            <label class="form-check-label" for="IsActive">
                                Trạng thái hoạt động
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
<script>
let isEditing = false;

function openCreateModal() {
    isEditing = false;
    document.getElementById('modalTitle').textContent = 'Thêm sản phẩm mới';
    document.getElementById('productForm').reset();
    document.getElementById('ProductID').value = '';
    document.getElementById('IsActive').checked = true;
    
    // Show modal
    const modalElement = document.getElementById('productModal');
    new bootstrap.Modal(modalElement).show();
}

function openEditModal(id) {
    isEditing = true;
    document.getElementById('modalTitle').textContent = 'Sửa sản phẩm';
    
    // Fetch product data
    fetch(`/Admin/GetProduct?id=${id}`)
        .then(response => response.json())
        .then(product => {
            console.log('Product data:', product);
            
            document.getElementById('ProductID').value = product.productID || product.ProductID;
            document.getElementById('ProductName').value = product.productName || product.ProductName;
            document.getElementById('Price').value = product.price || product.Price;
            document.getElementById('Stock').value = product.stock || product.Stock;
            document.getElementById('CategoryID').value = product.categoryID || product.CategoryID;
            document.getElementById('ImageURL').value = product.imageURL || product.ImageURL || '';
            document.getElementById('Description').value = product.description || product.Description || '';
            
            // Handle IsActive - can be boolean true/false or string
            const isActiveValue = product.isActive !== undefined ? product.isActive : product.IsActive;
            document.getElementById('IsActive').checked = isActiveValue === true || isActiveValue === 'true' || isActiveValue === 'True';
            
            // Show modal
            const modalElement = document.getElementById('productModal');
            new bootstrap.Modal(modalElement).show();
        })
        .catch(error => {
            console.error('Error fetching product:', error);
            alert('Có lỗi xảy ra khi tải thông tin sản phẩm!');
        });
}

function saveProduct(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const product = {};
    formData.forEach((value, key) => {
        if (key === 'IsActive') {
            product[key] = event.target.querySelector('#IsActive').checked;
        } else {
            product[key] = value;
        }
    });
    
    const url = isEditing ? '/Admin/UpdateProduct' : '/Admin/CreateProduct';
    
    fetch(url, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(product)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert(data.message || 'Có lỗi xảy ra!');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Có lỗi xảy ra!');
    });
}

function deleteProduct(id, name) {
    if (confirm(`Bạn có chắc chắn muốn xóa sản phẩm "${name}"?`)) {
        fetch('/Admin/DeleteProduct', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert(data.message || 'Có lỗi xảy ra!');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Có lỗi xảy ra!');
        });
    }
}
</script>
}