@model Product
@{
    ViewData["Title"] = Model.ProductName;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <img src="@Model.ImageURL" class="img-fluid rounded shadow" alt="@Model.ProductName" 
                 onerror="this.src='https://via.placeholder.com/500x500'" style="height: 500px; object-fit: cover;">
        </div>
        
        <div class="col-md-6">
            <h2 class="fw-bold mb-3">@Model.ProductName</h2>
            <p class="text-muted">Danh mục: <span class="badge bg-primary">@Model.Category?.CategoryName</span></p>
            <h3 class="text-danger fw-bold mb-4">@Model.Price.ToString("N0") ₫</h3>
            
            <hr class="my-4">
            
            <div class="mb-4">
                <h6 class="fw-bold">Mô tả:</h6>
                <p class="text-muted">@Html.Raw(Model.Description ?? "Không có mô tả")</p>
            </div>
            
            <div class="mb-4">
                <label class="form-label fw-bold">Số lượng:</label>
                <div class="input-group" style="width: 150px;">
                    <button class="btn btn-outline-secondary" type="button" onclick="decreaseQuantity()">-</button>
                    <input type="number" id="quantity" class="form-control text-center" value="1" min="1" max="@Model.Stock">
                    <button class="btn btn-outline-secondary" type="button" onclick="increaseQuantity()">+</button>
                </div>
            </div>
            
            @if (Model.Stock > 0)
            {
                <p class="text-success mb-3"><i class="bi bi-check-circle"></i> Còn hàng (@Model.Stock sản phẩm)</p>
                @if (ViewBag.IsAuthenticated != null && (bool)ViewBag.IsAuthenticated)
                {
                    <button class="btn btn-primary btn-lg w-100 mb-3" onclick="addToCart(@Model.ProductID)">
                        <i class="bi bi-cart-plus"></i> Thêm vào giỏ hàng
                    </button>
                }
                else
                {
                    <a class="btn btn-primary btn-lg w-100 mb-3" href="@Url.Action("Login", "Auth")">
                        <i class="bi bi-box-arrow-in-right"></i> Đăng nhập để mua
                    </a>
                }
            }
            else
            {
                <p class="text-danger mb-3"><i class="bi bi-x-circle"></i> Hết hàng</p>
                <button class="btn btn-secondary btn-lg w-100" disabled>Hết hàng</button>
            }
        </div>
    </div>
    
    <hr class="my-5">
    
    <!-- Reviews -->
    <h4 class="mb-4"><i class="bi bi-star-fill text-warning"></i> Đánh giá sản phẩm</h4>
    
    <div class="row">
        <div class="col-md-8">
            @if (ViewBag.Reviews != null && ((List<Review>)ViewBag.Reviews).Any())
            {
                @foreach (var review in (List<Review>)ViewBag.Reviews)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between mb-2">
                                <h6 class="fw-bold">@review.User?.FullName</h6>
                                <div>
                                    @for (int i = 0; i < review.Rating; i++)
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                </div>
                            </div>
                            <p class="mb-0">@review.Comment</p>
                            <small class="text-muted">@review.CreatedAt.ToString("dd/MM/yyyy")</small>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-muted">Chưa có đánh giá nào</p>
            }
        </div>
    </div>
</div>

@section Scripts {
<script>
let selectedRating = 0;

function highlightStars(rating) {
    $('.star').each(function(i) {
        if (i < rating) {
            $(this).removeClass('bi-star').addClass('bi-star-fill text-warning');
        } else {
            $(this).removeClass('bi-star-fill').addClass('bi-star');
        }
    });
}

function decreaseQuantity() {
    var qty = parseInt($('#quantity').val());
    if (qty > 1) $('#quantity').val(qty - 1);
}

function increaseQuantity() {
    var qty = parseInt($('#quantity').val());
    if (qty < @Model.Stock) $('#quantity').val(qty + 1);
}

function addToCart(productId) {
    console.log('Adding to cart - ProductId:', productId);
    var quantity = parseInt($('#quantity').val());
    console.log('Quantity:', quantity);
    
    fetch('@Url.Action("Add", "Cart")', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({ productId, quantity })
    })
    .then(response => response.json())
    .then(data => {
        console.log('Response:', data);
        if(data.success) {
            showToast('success', '✓ Đã thêm vào giỏ hàng!');
            setTimeout(() => location.reload(), 1500);
        } else {
            showToast('danger', 'Vui lòng đăng nhập để thêm sản phẩm vào giỏ hàng!');
            setTimeout(() => {
                if(confirm('Đi tới trang đăng nhập?')) {
                    window.location.href = '@Url.Action("Login", "Auth")';
                }
            }, 2000);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showToast('danger', 'Có lỗi xảy ra! Vui lòng thử lại.');
    });
}

function showToast(type, message) {
    const toastContainer = document.createElement('div');
    toastContainer.className = 'position-fixed top-0 end-0 p-3';
    toastContainer.style.zIndex = 9999;
    
    const toastHtml = `
        <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    <i class="bi ${type === 'success' ? 'bi-check-circle-fill' : 'bi-exclamation-circle-fill'} me-2"></i>
                    ${message}
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    `;
    
    toastContainer.innerHTML = toastHtml;
    document.body.appendChild(toastContainer);
    
    const toastElement = toastContainer.querySelector('.toast');
    const toast = new bootstrap.Toast(toastElement);
    toast.show();
    
    toastElement.addEventListener('hidden.bs.toast', function() {
        toastContainer.remove();
    });
}
</script>
}
